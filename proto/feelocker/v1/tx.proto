syntax = "proto3";
package guardian.v1;

option go_package = "github.com/bandprotocol/chain/x/feelocker/types";

import "gogoproto/gogo.proto";
import "feelocker/v1/feelocker.proto";
import "cosmos/base/v1beta1/coin.proto";

service Msg {
  rpc Lock(MsgLockRequest) returns (MsgLockResponse);
  rpc Claim(MsgClaimRequest) returns (MsgClaimResponse);
}

message MsgLockRequest {
  option (gogoproto.equal) = true;

  string payer = 1;
  repeated string payees = 2;

  repeated cosmos.base.v1beta1.Coin fee = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message MsgLockResponse {}

message MsgClaimRequest {
  option (gogoproto.equal) = true;

  string payee = 1;
  uint64 locked_fee_id = 2 [
    (gogoproto.customname) = "LockedFeeID",
    (gogoproto.casttype) = "LockedFeeID"
  ];
}

message MsgClaimResponse {}
